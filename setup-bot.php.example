<?php


$bot = new MelanoBot('irc.example.org',6667,'ExampleBot',null,
                        array('#example','#channel'),
                        array("OtherBot")); // nicks blacklisted here will be completely ignored
 

$owners = array( 'BotOwnerNick' => 'BotOwnerNick.users.quakenet.org' );
$whitelist = array ( 'Admin1Nick'=>null, 
                     'Admin2Nick'=>'example.com' );

// nicks blacklisted here can generate internal changes but will be filtered
$soft_blacklist = array("AnnoyingUser");


// Nice answers
$fake_answers = array(
    'Signs point to yes',
    'Yes',
    'Without a doubt',
    'As I see it, yes',
    'It is decidedly so',
    'Of course',
    'Most likely',
    'Sure!',

    'Maybe',

    'Concentrate and ask again',
    'Better not tell you now',
    'Cannot predict now',
    'Ask again later',
    "I don't know",

    'Maybe not',

    'My reply is no',
    'My sources say no',
    'Very doubtful',
    "Don't count on it",
    "I don't think so",
    "Nope",
    "No way!",
    "No",

);

// Wikipedia
// You should set the User-Agent if you use the Wikipedia API 
// See; https://www.mediawiki.org/wiki/API:Quick_start_guide#Identifying_your_client
require('wikipedia.php');

$help['describe'] = array(
        'auth'=>ANYONE,
        'synopsis'=>'describe Term...',
        'desc'=>'Make the bot explain you what Term means (using Wikipedia)',
    );

// Yandex
require('yandex-translate.php');
//$yandex = new YandexAPI("Your API Key here");

$help['translate'] = array(
        'auth'=>ANYONE,
        'synopsis'=>'translate [from Language] [into Language] Phrase...',
        'desc'=>'Make the bot translate the given Phrase (using Yandex)',
    );

function extra_commands($cmd,$bot)
{    
    if ( $cmd->cmd == 'describe' )
    {
        $text = wikipedia_describe($cmd->param_string);
        if ( $text == "" )
            $bot->say($cmd->channel, "I don't know anything about {$cmd->param_string}");
        else
            $bot->say($cmd->channel, elide_string($text,400));
            
        return true;
    }
    
    if ( $cmd->cmd == 'translate' )
    {
        global $yandex;
        if ( isset($yandex) && translate_command($yandex,$cmd,$bot) )
            return true;
    } 
    
    if ( substr(trim($cmd->raw),-1) == '?' )
    {
        global $fake_answers;
        $bot->say($cmd->channel, $fake_answers[rand(0,count($fake_answers)-1)]);
        return true;
    }
    
    return false;
}

function extra_raw_commands($cmd,$bot)
{
    if ( strpos($cmd->raw,"www.youtube.com/watch?v=") !== false )
    {
        $bot->say($cmd->channel,"Ha Ha! Nice vid {$cmd->from}!");
        return true;
    }
    return false;
}

function filter($cmd,$bot)
{
    global $soft_blacklist;
    if ( $cmd->chanhax && !check_admin($cmd)  )
    {
        $bot->say($cmd->from,"Sorry ".$cmd->from." but only admins can use this hax" );
        return false;
    }
    else if ( in_array($cmd->from,$soft_blacklist) )
        return false;
    return true;
}
