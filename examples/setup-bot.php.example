<?php

require_once("networks.php");

require_once("executors-core.php");
require_once("executors-message.php");
require_once("executors-misc.php");
require_once('executors-webapi.php');
require_once('executor-mediawiki.php');
require_once('executors-webapi.php');
require_once('executors-cup.php');
require_once('rcon-data-source.php');

date_default_timezone_set("UTC");

$bot = new MelanoBot($network_quakenet,'ExampleBot',null,
                        array('#example','#channel'),
                        array("OtherBot")); // nicks blacklisted here will be completely ignored
$bot->output_log = 3;

$driver = new BotDriver($bot);

$driver->data->add_to_list('owner','BotOwnerNick','BotOwnerNick.users.example.com');
$driver->data->add_to_list('admin','Admin1Nick');
$driver->data->add_to_list('admin','Admin2Nick','example.com');
$driver->add_to_list('blacklist','AnnoyingUser');

// allow reading commands from standard input
$driver->install_source(new Stdin_Data_Source);

$driver->on_error = function (MelanoBotCommand $cmd, MelanoBot $bot, BotData $driver)
{
	$bot->say($cmd->channel,"Shut up ".$cmd->from);
};


$message_queue = new MessageQueue();

// Global commands available on every channel
$disp_everywhere = new BotCommandDispatcher();
$disp_everywhere->install(array(
// owner commands
	new Executor_Reconnect(),
	new Executor_Server(),
	new Executor_Quit(),
	new Executor_Restart(),
	new Executor_Join(),
	new Executor_Part(),
	new Executor_Nick(),
	new Executor_RawIRC('cmd'),
	new Executor_StdoutDump(),
// admin commands
	new Executor_UserList('admin','admin',array('owner'=>"But % is my daddy!")),
	new Executor_UserList('blacklist','admin',array('owner'=>"But % is my daddy!")),
// filters
	new Filter_UserList('blacklist'),
	new Filter_ChanHax('chanhax','admin'),
// public commands
	new Executor_Help(),
// message handling
	new Executor_NotifyMessages($message_queue),
	new Executor_NotifyMessages($message_queue,'JOIN'),
	new Executor_Message($message_queue),
	new Executor_Tell($message_queue),
// finalizing commands
	new Post_Restart(),
));

// Some fun stuff to be displayed in a single channel
$disp_fun = new BotCommandDispatcher("#funchan");
$disp_fun->install(array(
// admin
	new Executor_Action("please","admin"),
	new Executor_Morse(),
// public commands
	new Executor_Echo("say"),
	new Executor_Echo("slap","slaps"),
	/// \note you should set the user agent if using this
	new Executor_Wiki("describe","Wikipedia","http://en.wikipedia.org/w/api.php"),
	new Executor_GoogleImages(),
	new Executor_Youtube(),
	new Executor_ReverseText(),
	new Executor_Dictionary(),
// non-PRIVMSG
	new Executor_RespondKick(),
	new Executor_GreetingSelf("Hello!!!"),
	new Executor_GreetingUsers(array("BotOwnerNick"=>irc_action("welcomes his daddy"))),
// Raw
	new Raw_Youtube(),
	new Raw_Echo("Fun!","?!",'admin'),
	new Raw_Question(),
	new Raw_What(), /// KEEP AS LAST
));

// Set up challonge cup management
$driver->data->grant_access['player-admin'] = array('player','admin');
$cup_manager = new CachedCupManager('your challonge API key','challonge organization (optional)');
$disp_cup = new BotCommandDispatcher("#cup");

$disp_cup->install(array(
// cup commands (admin)
	new Executor_Cup_Cups($cup_manager),
	new Executor_Cup_Start($cup_manager),
	new Executor_Cup_End($cup_manager),
	new Executor_Cup_Pick_Setup($cup_manager),
	new Executor_Cup_Pick_Stop($cup_manager),
	new Executor_Cup_Pick_Begin($cup_manager),
	new Executor_Cup_Pick_Nick($cup_manager),
	new Executor_Cup_Pick_Pick($cup_manager),
// cup commands (admin+anyone)
	new Executor_Cup_Cup($cup_manager),
	new Executor_Cup_Description($cup_manager),
	new Executor_Cup_Time($cup_manager),
	new Executor_Cup_Maps($cup_manager),
	new Executor_Cup_Score($cup_manager),
// cup commands (anyone)
	new Executor_Cup_Next($cup_manager),
	new Executor_Cup_Results($cup_manager),
// cup commands (selected players)
	new Executor_Pick_Raw($cup_manager),
// non-PRIVMSG
	new Executor_GreetingSelf("Cup bot is ready!"),
));

// set up rcon connection
$rcon = new Rcon ( "127.0.0.1", 26000, "rcon password");
$driver->install_source(new Rcon_Data_Source($rcon));
$disp_rcon = new RconDispatcher("#rcon",$rcon);
$disp_rcon->install(array(
	new Executor_Echo("rcon_say",false,'rcon'),
));

// apply and run
$driver->install(array($disp_everywhere,$disp_fun,$disp_cup,$disp_rcon));

$driver->run();
